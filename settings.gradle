dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://raw.githubusercontent.com/saki4510t/libcommon/master/repository/' }
        maven { url 'https://gitee.com/liuchaoya/libcommon/raw/master/repository/' }
        maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url "https://jitpack.io" }
        maven { url 'https://www.jitpack.io' }
        mavenCentral()
        google()
    }
}

rootProject.name = "AAdaptKit"
include ':app'
include ':adaptk_autosize'
include ':adaptk_systembar'
include ':adaptk_splashscreen'
include ':adaptk_dynamic_colors'
include ':adaptk_preference'
include ':adaptk_screen'
include ':adaptk_splashscreen_test'
//ALibKit_Jetbrains
include ':ALibKit_Jetbrains'
project(':ALibKit_Jetbrains').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Jetbrains")
include ':ALibKit_Jetbrains:kotlin_stdlib'
//ASwiftKit
include ':ASwiftKit'
project(':ASwiftKit').projectDir = new File("D:\\WorkSpace\\GitHub\\ASwiftKit")
include ':ASwiftKit:basick'
include ':ASwiftKit:xmlk'
include ':ASwiftKit:bindk'
//ALibKit_Jetpack
include ':ALibKit_Jetpack'
project(':ALibKit_Jetpack').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Jetpack")
include ':ALibKit_Jetpack:preference'
include ':ALibKit_Jetpack:core_splashscreen'
//AAnimKit
include ':AAnimKit'
project(':AAnimKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AAnimKit")
include ':AAnimKit:animk'
//AStackKit
include ':AStackKit'
project(':AStackKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AStackKit")
include ':AStackKit:stackk_callback'
include ':AStackKit:stackk_basic'
//KUtilKit
include ':KUtilKit'
project(':KUtilKit').projectDir = new File("D:\\WorkSpace\\GitHub\\KUtilKit")
include ':KUtilKit:utilk_android'
include ':KUtilKit:utilk_kotlin'
